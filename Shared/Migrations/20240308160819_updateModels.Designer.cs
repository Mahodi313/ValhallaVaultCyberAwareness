// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ValhallaVaultCyberAwareness.Data;

#nullable disable

namespace ValhallaVaultCyberAwareness.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240308160819_updateModels")]
    partial class updateModels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ValhallaVaultCyberAwareness.DAL.DbModels.AnswerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Explanation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCorrectAnswer")
                        .HasColumnType("bit");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Answer = "Ett legitimt försök från banken att skydda ditt konto",
                            IsCorrectAnswer = false,
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 2,
                            Answer = "En informationsinsamling för en marknadsundersökning",
                            IsCorrectAnswer = false,
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 3,
                            Answer = "Ett potentiellt telefonbedrägeri",
                            Explanation = "Banker och andra finansiella institutioner begär aldrig känslig information såsom kontonummer eller lösenord via telefon. Detta är ett klassiskt tecken på telefonbedrägerier.",
                            IsCorrectAnswer = true,
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 4,
                            Answer = "En legitim begäran om hjälp från en person i nöd",
                            IsCorrectAnswer = false,
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 5,
                            Answer = "Ett romansbedrägeri",
                            Explanation = "Begäran om pengar, särskilt under omständigheter där två personer aldrig har träffats fysiskt, är ett vanligt tecken på romansbedrägeri.",
                            IsCorrectAnswer = true,
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 6,
                            Answer = "En tillfällig ekonomisk svårighet",
                            IsCorrectAnswer = false,
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 7,
                            Answer = "Genomföra omedelbar investering för att inte missa möjligheten",
                            IsCorrectAnswer = false,
                            QuestionId = 3
                        },
                        new
                        {
                            Id = 8,
                            Answer = "Investeringsbedrägeri",
                            Explanation = "Erbjudanden som lovar hög avkastning med liten eller ingen risk, särskilt via oönskade e-postmeddelanden, är ofta tecken på investeringsbedrägerier.",
                            IsCorrectAnswer = true,
                            QuestionId = 3
                        },
                        new
                        {
                            Id = 9,
                            Answer = "Begära mer information för att utföra en noggrann ‘’due diligence’’",
                            IsCorrectAnswer = false,
                            QuestionId = 3
                        },
                        new
                        {
                            Id = 10,
                            Answer = "Ett misstag av kreditkortsföretaget",
                            IsCorrectAnswer = false,
                            QuestionId = 4
                        },
                        new
                        {
                            Id = 11,
                            Answer = "Kreditkortsbedrägeri",
                            Explanation = "Oidentifierade transaktioner på ditt kreditkortsutdrag är en stark indikation på att ditt kortnummer har komprometterats och använts för obehöriga köp, vilket är typiskt för kreditkortsbedrägeri.",
                            IsCorrectAnswer = true,
                            QuestionId = 4
                        },
                        new
                        {
                            Id = 12,
                            Answer = "Obehöriga köp av en familjemedlem",
                            IsCorrectAnswer = false,
                            QuestionId = 4
                        },
                        new
                        {
                            Id = 13,
                            Answer = "Utbildning i digital säkerhet för alla anställda",
                            Explanation = "Utbildning i digital säkerhet är avgörande för att hjälpa anställda att känna igen och undvika säkerhetshot som phishing, vilket är en vanlig attackvektor.",
                            IsCorrectAnswer = true,
                            QuestionId = 5
                        },
                        new
                        {
                            Id = 14,
                            Answer = "Installera en starkare brandvägg",
                            IsCorrectAnswer = false,
                            QuestionId = 5
                        },
                        new
                        {
                            Id = 15,
                            Answer = "Byta ut all IT-utrustning",
                            IsCorrectAnswer = false,
                            QuestionId = 5
                        },
                        new
                        {
                            Id = 16,
                            Answer = "Informera alla användare om sårbarheten och rekommendera temporära skyddsåtgärder",
                            Explanation = "Transparent kommunikation och rådgivning om tillfälliga åtgärder är avgörande för att skydda användarna medan en permanent lösning utvecklas.",
                            IsCorrectAnswer = true,
                            QuestionId = 6
                        },
                        new
                        {
                            Id = 17,
                            Answer = "Ignorera problemet tills en patch kan utvecklas",
                            IsCorrectAnswer = false,
                            QuestionId = 6
                        },
                        new
                        {
                            Id = 18,
                            Answer = "Stänga ner tjänsten tillfälligt",
                            IsCorrectAnswer = false,
                            QuestionId = 6
                        },
                        new
                        {
                            Id = 19,
                            Answer = "En enskild hackare med ett personligt vendetta",
                            IsCorrectAnswer = false,
                            QuestionId = 7
                        },
                        new
                        {
                            Id = 20,
                            Answer = "En konkurrerande företagsentitet",
                            IsCorrectAnswer = false,
                            QuestionId = 7
                        },
                        new
                        {
                            Id = 21,
                            Answer = "Organiserade cyberbrottsliga grupper",
                            Explanation = "DDoS-attacker kräver ofta betydande resurser och koordinering, vilket är karakteristiskt för organiserade cyberbrottsliga grupper.",
                            IsCorrectAnswer = true,
                            QuestionId = 7
                        },
                        new
                        {
                            Id = 22,
                            Answer = "Återgå till kontorsarbete",
                            IsCorrectAnswer = false,
                            QuestionId = 8
                        },
                        new
                        {
                            Id = 23,
                            Answer = "Införa striktare lösenordspolicyer och tvåfaktorsautentisering för fjärråtkomst",
                            Explanation = "Införa striktare lösenordspolicyer och tvåfaktorsautentisering för fjärråtkomst",
                            IsCorrectAnswer = true,
                            QuestionId = 8
                        },
                        new
                        {
                            Id = 24,
                            Answer = "Förbjuda användning av personliga enheter för arbete",
                            IsCorrectAnswer = false,
                            QuestionId = 8
                        },
                        new
                        {
                            Id = 25,
                            Answer = "Phishing",
                            IsCorrectAnswer = false,
                            QuestionId = 9
                        },
                        new
                        {
                            Id = 26,
                            Answer = "Ransomware",
                            Explanation = "Ransomware-angrepp involverar kryptering av offerdata och kräver lösen för dekryptering, vilket är särskilt skadligt för kritiska sektorer som hälsovård.",
                            IsCorrectAnswer = true,
                            QuestionId = 9
                        },
                        new
                        {
                            Id = 27,
                            Answer = "Spyware",
                            IsCorrectAnswer = false,
                            QuestionId = 9
                        },
                        new
                        {
                            Id = 28,
                            Answer = "Spyware",
                            IsCorrectAnswer = false,
                            QuestionId = 10
                        },
                        new
                        {
                            Id = 29,
                            Answer = "Ransomware",
                            Explanation = "Maersk utsattes för NotPetya ransomware-angreppet, som ledde till omfattande störningar och förluster genom att kryptera företagets globala system. Maersk rapporterade att företaget led ekonomiska förluster på grund av NotPetya ransomware-angreppet som uppskattades till cirka 300 miljoner USD. Denna siffra reflekterar de omfattande kostnaderna för störningar i deras globala verksamheter, återställande av system och data, samt förlust av affärer under tiden systemen var nere. NotPetya-angreppet anses vara ett av de mest kostsamma cyberangreppen mot ett enskilt företag och tjänar som en kraftfull påminnelse om de potentiella konsekvenserna av cyberhot.",
                            IsCorrectAnswer = true,
                            QuestionId = 10
                        },
                        new
                        {
                            Id = 30,
                            Answer = "Cyberkriminalitet",
                            IsCorrectAnswer = false,
                            QuestionId = 11
                        },
                        new
                        {
                            Id = 31,
                            Answer = "Cyberspionage",
                            Explanation = "Cyberspionage avser aktiviteter där aktörer, ofta statliga, engagerar sig i övervakning och datainsamling genom cybermedel för att erhålla hemlig information utan målets medgivande, typiskt för politiska, militära eller ekonomiska fördelar.",
                            IsCorrectAnswer = true,
                            QuestionId = 11
                        },
                        new
                        {
                            Id = 32,
                            Answer = "Cyberterrorism",
                            IsCorrectAnswer = false,
                            QuestionId = 11
                        },
                        new
                        {
                            Id = 33,
                            Answer = "Social ingenjörskonst",
                            IsCorrectAnswer = false,
                            QuestionId = 12
                        },
                        new
                        {
                            Id = 34,
                            Answer = "Massövervakning",
                            IsCorrectAnswer = false,
                            QuestionId = 12
                        },
                        new
                        {
                            Id = 35,
                            Answer = "Riktade cyberattacker",
                            Explanation = "Riktade cyberattacker som utnyttjar noll-dagars Zero-day sårbarheter är en avancerad metod för cyberspionage där angriparen specifikt riktar in sig på ett mål för att komma åt känslig information eller data genom att utnyttja tidigare okända sårbarheter i programvara.",
                            IsCorrectAnswer = true,
                            QuestionId = 12
                        },
                        new
                        {
                            Id = 36,
                            Answer = "GDPR",
                            IsCorrectAnswer = false,
                            QuestionId = 13
                        },
                        new
                        {
                            Id = 37,
                            Answer = "Säkerhetsskyddslagen",
                            Explanation = "Säkerhetsskyddslagen är en svensk lagstiftning som syftar till att skydda nationellt känslig information från spioneri, sabotage, terroristbrott och andra säkerhetshot. Lagen ställer krav på säkerhetsskyddsåtgärder för verksamheter av betydelse för Sveriges säkerhet.",
                            IsCorrectAnswer = true,
                            QuestionId = 13
                        },
                        new
                        {
                            Id = 38,
                            Answer = "IT-säkerhetslagen",
                            IsCorrectAnswer = false,
                            QuestionId = 13
                        },
                        new
                        {
                            Id = 39,
                            Answer = "Oberoende hackare",
                            IsCorrectAnswer = false,
                            QuestionId = 14
                        },
                        new
                        {
                            Id = 40,
                            Answer = "Aktivistgrupper",
                            IsCorrectAnswer = false,
                            QuestionId = 14
                        },
                        new
                        {
                            Id = 41,
                            Answer = "Statssponsrade hackers",
                            Explanation = "Statssponsrade hackers är aktörer som arbetar på uppdrag av eller med stöd från en regering för att genomföra cyberspionage, ofta riktat mot utländska intressen, organisationer eller regeringar för att få strategiska fördelar.",
                            IsCorrectAnswer = true,
                            QuestionId = 14
                        });
                });

            modelBuilder.Entity("ValhallaVaultCyberAwareness.DAL.DbModels.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ValhallaVaultCyberAwareness.DAL.DbModels.CategoryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Info")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Info = "Bedrägerier är en betydande oro för individer och organisationer över hela världen. Det är viktigt att förstå de olika formerna av bedrägerier och veta hur man kan skydda sig mot dem. I detta kursmoment kommer vi att fokusera på olika aspekter av bedrägerier och lära oss praktiska strategier för att undvika att bli offer för dem.\r\n\r\nI den första delen av kursmomentet kommer vi att undersöka kreditkortsbedrägeri och andra vanliga telefonbedrägerier. Vi kommer att lära oss att känna igen tecknen på dessa bedrägerier och förstå hur man agerar säkert när man konfronteras med dem. Dessutom kommer vi att diskutera metoder för att skydda sig mot telefonbedrägerier och förbli säker i en digitalt ansluten värld.\r\n\r\nI den andra delen av kursmomentet kommer vi att utforska andra former av bedrägerier, inklusive romansbedrägeri och investeringsbedrägeri. Vi kommer att lära oss att vara medvetna om potentiella bedrägeriförsök och utveckla en sund skepticism mot misstänkta erbjudanden och begäranden.\r\n\r\nI den sista delen av kursmomentet kommer vi att ta upp olika typer av bedrägerier som kan drabba individer och organisationer i hemmiljön, inklusive identitetsstöld, nätfiske och bluffmejl, samt abonnemangsfällor och falska fakturor. Vi kommer också att diskutera hotet från ransomware och hur man bäst skyddar sig mot det.\r\n\r\nGenom att öka medvetenheten och förstå de vanligaste bedrägerimetoderna kan vi rusta oss själva och våra organisationer med de nödvändiga verktygen för att förebygga och motverka bedrägerier.",
                            Name = "Att skydda sig mot bedrägerier"
                        },
                        new
                        {
                            Id = 2,
                            Info = "I momentetet \"Cyberspionage\" fokuserar vi på det ökande hotet från digitalt spionage mot företag och organisationer. Vi undersöker olika metoder och tekniker som används av cyberbrottslingar, främmande stater och konkurrenter för att stjäla företagshemligheter, känslig information och intellektuell egendom.\r\n\r\nI detta kursmoment granskar vi hur angripare kan använda avancerade metoder som social engineering, nätfiske och målinriktade attacker för att infiltrera företagsnätverk och få tillgång till konfidentiell data. Vi diskuterar även riskerna med spionprogram och avlyssningsverktyg som kan installeras på företagsdatorer och nätverk för att övervaka och stjäla information utan att bli upptäckta.\r\n\r\nGenom att förstå dessa hot och lära sig om bästa praxis för att upptäcka, förebygga och motverka cyberspionage kan företag och organisationer stärka sin digitala säkerhet och skydda sina värdefulla tillgångar från potentiella attacker. Vi kommer att utforska fallstudier, praktiska exempel och strategier för att hjälpa deltagarna att öka sin medvetenhet och stärka sina försvar mot detta allvarliga hot.",
                            Name = "Cybersäkerhet för företag"
                        },
                        new
                        {
                            Id = 3,
                            Info = "Cyberspionage för företag\" är categorin där vi utforskar olika aspekter av cyberspionage och dess förebyggande åtgärder på en djupare nivå. Vi börjar med att förstå cyberspionage som ett fenomen och identifierar det som en aktivitet där aktörer, vanligtvis statliga, engagerar sig i övervakning och datainsamling genom cybermedel för att erhålla hemlig information för politiska, militära eller ekonomiska fördelar.\r\n\r\nVi undersöker även vikten av att öka användningen av kryptering för att skydda känslig kommunikation och betonar att implementera program för beteendeanalys och anomalidetektering för att upptäcka insiderhot, vilket är en av de svåraste säkerhetsutmaningarna att hantera.\r\n\r\nEn annan viktig aspekt är hanteringen av mjukvarusårbarheter, som ofta utnyttjas i cyberspionageattacker. Vi betonar vikten av att hålla all mjukvara och operativsystem uppdaterade med de senaste säkerhetspatcharna för att minimera risken för intrång och dataläckor.\r\n\r\nVi diskuterar också olika metoder för cyberspionage, inklusive riktade cyberattacker som utnyttjar noll-dagars sårbarheter och betonar behovet av att ha robusta säkerhetsskyddsåtgärder, som fastställs av lagar som säkerhetsskyddslagen, för att skydda nationellt känslig information från spioneri och andra säkerhetshot.\r\n\r\nSlutligen, vi identifierar olika aktörer inom cyberspionage, särskilt statssponsrade hackers, som är aktiva med stöd från regeringar för att genomföra cyberspionage mot utländska intressen eller organisationer för strategiska fördelar.",
                            Name = "Cyberspionage"
                        });
                });

            modelBuilder.Entity("ValhallaVaultCyberAwareness.DAL.DbModels.QuestionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("SubcategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SubcategoryId");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SubcategoryId = 1,
                            Title = "Du får ett oväntat telefonsamtal från någon som påstår sig vara från din bank. Personen ber dig bekräfta ditt kontonummer och lösenord för att \"säkerställa din kontos säkerhet\" efter en påstådd säkerhetsincident. Hur bör du tolka denna situation?"
                        },
                        new
                        {
                            Id = 2,
                            SubcategoryId = 2,
                            Title = "Efter flera månader av daglig kommunikation med någon du träffade på en datingsida, börjar personen berätta om en plötslig finansiell kris och ber om din hjälp genom att överföra pengar. Vad indikerar detta mest sannolikt?"
                        },
                        new
                        {
                            Id = 3,
                            SubcategoryId = 3,
                            Title = "Du får ett e-postmeddelande/samtal om ett exklusivt erbjudande att investera i ett startup-företag som påstås ha en revolutionerande ny teknologi, med garantier om exceptionellt hög avkastning på mycket kort tid. Hur bör du förhålla dig till erbjudandet?"
                        },
                        new
                        {
                            Id = 4,
                            SubcategoryId = 4,
                            Title = "Efter en online-shoppingrunda märker du oidentifierade transaktioner på ditt kreditkortsutdrag från företag du aldrig handlat från. Vad indikerar detta mest sannolikt?"
                        },
                        new
                        {
                            Id = 5,
                            SubcategoryId = 12,
                            Title = "Inom företaget märker man att konfidentiella dokument regelbundet läcker ut till konkurrenter. Efter en intern granskning upptäcks det att en anställd omedvetet har installerat skadlig programvara genom att klicka på en länk i ett phishing-e-postmeddelande. Vilken åtgärd bör prioriteras för att förhindra framtida incidenter?"
                        },
                        new
                        {
                            Id = 6,
                            SubcategoryId = 13,
                            Title = "Inom företaget upptäckts det en sårbarhet i vår programvara som kunde möjliggöra obehörig åtkomst till användardata. Företaget har inte omedelbart en lösning. Vilken är den mest lämpliga första åtgärden?"
                        },
                        new
                        {
                            Id = 7,
                            SubcategoryId = 14,
                            Title = "Vårt företag blir måltavla för en DDoS-attack som överväldigar våra servers och gör våra tjänster otillgängliga för kunder. Vilken typ av aktör är mest sannolikt ansvarig för denna typ av attack?"
                        },
                        new
                        {
                            Id = 8,
                            SubcategoryId = 15,
                            Title = "Med övergången till distansarbete upptäcker vårt företag en ökning av säkerhetsincidenter, inklusive obehörig åtkomst till företagsdata. Vilken åtgärd bör företaget vidta för att adressera denna nya riskmiljö?"
                        },
                        new
                        {
                            Id = 9,
                            SubcategoryId = 16,
                            Title = "Hälsovårdsmyndigheten utsätts för ett cyberangrepp som krypterar patientdata och kräver lösen för att återställa åtkomsten. Vilken typ av angrepp har de sannolikt blivit utsatta för?"
                        },
                        new
                        {
                            Id = 10,
                            SubcategoryId = 17,
                            Title = "Det globala fraktbolaget Maersk blev offer för ett omfattande cyberangrepp som avsevärt störde deras verksamhet världen över. Vilken typ av malware var primärt ansvarig för denna incident?"
                        },
                        new
                        {
                            Id = 11,
                            SubcategoryId = 36,
                            Title = "Regeringen upptäcker att känslig politisk kommunikation har läckt och misstänker elektronisk övervakning. Vilket fenomen beskriver bäst denna situation?"
                        },
                        new
                        {
                            Id = 12,
                            SubcategoryId = 37,
                            Title = "Regeringen blir varse om en sofistikerad skadeprogramskampanj som utnyttjar Zero-day sårbarheter för att infiltrera deras nätverk och stjäla oerhört viktig data. Vilken metod för cyberspionage används sannolikt här?"
                        },
                        new
                        {
                            Id = 13,
                            SubcategoryId = 38,
                            Title = "Regeringen i Sverige ökar sitt interna säkerhetsprotokoll för att skydda sig mot utländska underrättelsetjänsters infiltration. Vilken lagstiftning ger ramverket för detta skydd?"
                        },
                        new
                        {
                            Id = 14,
                            SubcategoryId = 39,
                            Title = "Lunds universitet upptäcker att forskningsdata om ny teknologi har stulits. Undersökningar tyder på en välorganiserad grupp med kopplingar till en utländsk stat. Vilken typ av aktör ligger sannolikt bakom detta?"
                        });
                });

            modelBuilder.Entity("ValhallaVaultCyberAwareness.DAL.DbModels.SegmentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Info")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Segments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Info = "I del 1 fokuserar vi på att identifiera och hantera olika former av telefonbedrägerier och andra bedrägerimetoder. Vi lär oss att känna igen tecken på potentiella bedrägeriförsök, såsom obehöriga telefonsamtal som begär känslig information som kontonummer och lösenord. Dessutom lär vi oss att agera säkert genom att avsluta samtal och verifiera med officiella källor som bankens webbplats. Genom att öka medvetenheten och förstå hur bedragare agerar kan vi minska risken för att bli offer för bedrägerier.",
                            Name = "Del 1"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Info = "I del 2 utforskar vi ytterligare former av bedrägerier som kan drabba individer och organisationer. Vi undersöker bedrägerier i hemmet, inklusive identitetsstöld, nätfiske, bluffmejl, samt abonnemangsfällor och falska fakturor. Dessutom tar vi upp hotet från ransomware och diskuterar hur man bäst skyddar sig mot det. Genom att öka medvetenheten om dessa olika bedrägerimetoder kan vi förbli säkra och skydda våra personliga och affärsmässiga intressen.",
                            Name = "Del 2"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Info = "I del 3 fokuserar vi på ytterligare aspekter av bedrägerier och hur man kan hantera dem. Vi tar upp ämnen som abonnemangsfällor och falska fakturor, där vi lär oss att vara vaksamma och kritiska mot oönskade erbjudanden och begäranden. Dessutom diskuterar vi hotet från ransomware och metoder för att förebygga och hantera det. Genom att förstå dessa olika former av bedrägerier och vidta lämpliga åtgärder kan vi minimera risken för att bli offer och skydda våra personliga och affärsmässiga tillgångar.",
                            Name = "Del 3"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Info = "I del 1 av \"Cybersäkerhet för företag\" utforskar vi viktiga aspekter av digital säkerhet för att skydda företagsinformation mot cyberhot. Vi betonar vikten av att utbilda anställda i digital säkerhet för att minska risken för incidenter som phishing. Vidare diskuteras implementeringen av en stark lösenordspolicy och användningen av VPN-tjänster för att säkra enheter mot otrygga Wi-Fi-nätverk. Vi utforskar även betydelsen av e-postsäkerhetslösningar för att förhindra intrång via e-postbaserade hot som phishing. Dessutom diskuteras åtgärder för att hantera sårbarheter i programvara, samt strategier för att adressera nya risker relaterade till ökat distansarbete och ökad digital närvaro. Slutligen undersöker vi olika typer av cyberangrepp mot känsliga sektorer och betonar vikten av att vara medveten om hoten som kan påverka företagets verksamhet.",
                            Name = "Del 1"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Info = "I del 2 av \"Cybersäkerhet för företag\" fokuserar vi på social engineering och olika typer av cyberattacker. Vi undersöker nätfiske och skräppost, och hur företag kan identifiera och hantera sådana hot. Dessutom diskuteras vishing och varningar för denna typ av telefonbaserad bedrägeri. Vi utforskar också metoder för att identifiera VD-mejl och skydda företag mot försök till företagsbedrägerier. Vidare diskuteras öneangrepp och presentkortsbluffar, där företag måste vara medvetna om olika taktiker som används för att lura anställda och kunder. Genom att förstå dessa hot och implementera lämpliga säkerhetsåtgärder kan företag bättre skydda sig mot sociala och tekniska manipulationstekniker.",
                            Name = "Del 2"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Info = "I del 3 av \"Cybersäkerhet för företag\" utforskar vi olika typer av skadlig programvara och intrångsmetoder. Vi undersöker virus, maskar och trojaner, och hur de kan infektera företagsnätverk och system. Dessutom diskuteras nätverksintrång och dataintrång, där angripare utnyttjar sårbarheter för att få obehörig åtkomst till företagsdata och information. Vi granskar också vanliga sätt som företag blir hackade och de olika vägarna som angripare kan använda för att komma åt företagsnätverk och system. Genom att förstå dessa hot och sårbarheter kan företag vidta lämpliga åtgärder för att skydda sig och sina data från cyberattacker.",
                            Name = "Del 3"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            Info = "I del 4 av \"Cybersäkerhet för företag\" utforskar vi specifika typer av cyberhot och attacker som företag kan ställas inför. Vi granskar utpressningsvirus och hur de kan användas för att kryptera företagsdata och kräva lösensummor för att återställa åtkomsten. Dessutom diskuteras attacker mot servrar och hur dessa kan utnyttjas för att kompromettera företagsnätverk och system. Vi analyserar också olika typer av cyberangrepp som har drabbat företag i Norden och undersöker verktygen och taktikerna som används av cyberbrottslingar för att genomföra sina attacker. Slutligen granskar vi några kända cyberangrepp, inklusive Mirai, Wannacry och fallet Düsseldorf, för att förstå de potentiella konsekvenserna av sådana attacker och hur företag kan förbereda sig och skydda sig mot dem.\r\n\r\n\r\n\r\n\r\n\r\n",
                            Name = "Del 4"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 3,
                            Info = "I del 1 av \"Cyberspionage\" behandlas grundläggande aspekter av cyberspionage och dess förebyggande åtgärder. Först definieras cyberspionage som en aktivitet där aktörer, oftast statliga, använder cybermedel för att samla in hemlig information för politiska, militära eller ekonomiska syften. Därefter diskuteras vikten av att använda kryptering för att skydda känslig kommunikation och implementera program för beteendeanalys och anomalidetektering för att upptäcka insiderhot. Slutligen betonas betydelsen av att hålla all mjukvara och operativsystem uppdaterade för att minimera risken för intrång och dataläckor.",
                            Name = "Del 1"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 3,
                            Info = "I del 2 av \"Cyberspionage\" utforskas tre huvudteman: värvningsförsök, affärsspionage och påverkanskampanjer.\r\n\r\nVärvningsförsök avser situationer där aktörer försöker rekrytera personer för att samla in information eller genomföra operationer för deras räkning.\r\n\r\nAffärsspionage fokuserar på metoder och motiv för spionage riktat mot företag och organisationer. Målet är ofta att stjäla företagshemligheter eller annan känslig information för att uppnå ekonomisk vinning eller konkurrensfördelar.\r\n\r\nPåverkanskampanjer involverar strategiska operationer för att påverka opinionen, politiska processer eller andra beslutande organ. Dessa kampanjer kan användas för att sprida desinformation, skapa förvirring eller främja specifika intressen.",
                            Name = "Del 2"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 3,
                            Info = "I del 3 av Cyberspionage diskuteras Svensk underrättelsetjänst och cyberförsvar, signalspaning, informationssäkerhet och 5G, samt samverkan mot cyberspionage. Det inkluderar Sveriges förmåga att hantera och förebygga cyberspionage, användningen av signalspaning för att skydda kommunikation, särskilt i 5G-nätverk, samt betydelsen av samarbete mellan olika aktörer för att bekämpa hotet från cyberspionage.",
                            Name = "Del 3"
                        });
                });

            modelBuilder.Entity("ValhallaVaultCyberAwareness.DAL.DbModels.SubcategoryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SegmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SegmentId");

                    b.ToTable("Subcategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Kreditkortsbedrägeri",
                            SegmentId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Romansbedrägeri",
                            SegmentId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Investeringsbedrägeri",
                            SegmentId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Telefonbedrägeri",
                            SegmentId = 1
                        },
                        new
                        {
                            Id = 5,
                            Name = "Bedrägerier i hemmet",
                            SegmentId = 2
                        },
                        new
                        {
                            Id = 6,
                            Name = "Identitetsstöld",
                            SegmentId = 2
                        },
                        new
                        {
                            Id = 7,
                            Name = "Nätfiske och bluffmejl",
                            SegmentId = 2
                        },
                        new
                        {
                            Id = 8,
                            Name = "Investeringsbedrägeri på nätet",
                            SegmentId = 2
                        },
                        new
                        {
                            Id = 9,
                            Name = "Abonnemangsfällor och falska fakturor",
                            SegmentId = 3
                        },
                        new
                        {
                            Id = 10,
                            Name = "Ransomware",
                            SegmentId = 3
                        },
                        new
                        {
                            Id = 11,
                            Name = "Statistik och förhållningssätt",
                            SegmentId = 3
                        },
                        new
                        {
                            Id = 12,
                            Name = "Digital säkerhet på företag",
                            SegmentId = 4
                        },
                        new
                        {
                            Id = 13,
                            Name = "Risker och beredskap",
                            SegmentId = 4
                        },
                        new
                        {
                            Id = 14,
                            Name = "Aktörer inom cyberbrott",
                            SegmentId = 4
                        },
                        new
                        {
                            Id = 15,
                            Name = "Ökad digital närvaro och distansarbete",
                            SegmentId = 4
                        },
                        new
                        {
                            Id = 16,
                            Name = "Cyberangrepp mot känsliga sektorer",
                            SegmentId = 4
                        },
                        new
                        {
                            Id = 17,
                            Name = "Cyberrånet mot Mersk",
                            SegmentId = 4
                        },
                        new
                        {
                            Id = 18,
                            Name = "Social engineering",
                            SegmentId = 5
                        },
                        new
                        {
                            Id = 19,
                            Name = "Nätfiske och skräppost",
                            SegmentId = 5
                        },
                        new
                        {
                            Id = 20,
                            Name = "Vishing",
                            SegmentId = 5
                        },
                        new
                        {
                            Id = 21,
                            Name = "Varning för vishing",
                            SegmentId = 5
                        },
                        new
                        {
                            Id = 22,
                            Name = "Identifiera VD-mejl",
                            SegmentId = 5
                        },
                        new
                        {
                            Id = 23,
                            Name = "Öneangrepp och presentkortsbluffar",
                            SegmentId = 5
                        },
                        new
                        {
                            Id = 24,
                            Name = "Virus, maskar och trojaner",
                            SegmentId = 6
                        },
                        new
                        {
                            Id = 25,
                            Name = "Så kan det gå till",
                            SegmentId = 6
                        },
                        new
                        {
                            Id = 26,
                            Name = "Nätverksintrång",
                            SegmentId = 6
                        },
                        new
                        {
                            Id = 27,
                            Name = "Dataintrång",
                            SegmentId = 6
                        },
                        new
                        {
                            Id = 28,
                            Name = "Hackad!",
                            SegmentId = 6
                        },
                        new
                        {
                            Id = 29,
                            Name = "Vägarna in",
                            SegmentId = 6
                        },
                        new
                        {
                            Id = 30,
                            Name = "Utpressningsvirus",
                            SegmentId = 7
                        },
                        new
                        {
                            Id = 31,
                            Name = "Attacker mot servrar",
                            SegmentId = 7
                        },
                        new
                        {
                            Id = 32,
                            Name = "Cyberangrepp i Norden",
                            SegmentId = 7
                        },
                        new
                        {
                            Id = 33,
                            Name = "It-brottslingarnas verktyg",
                            SegmentId = 7
                        },
                        new
                        {
                            Id = 34,
                            Name = "Mirai, Wannacry och fallet Düsseldorf",
                            SegmentId = 7
                        },
                        new
                        {
                            Id = 35,
                            Name = "De sårbara molnen",
                            SegmentId = 7
                        },
                        new
                        {
                            Id = 36,
                            Name = "Allmänt om cyberspionage",
                            SegmentId = 8
                        },
                        new
                        {
                            Id = 37,
                            Name = "Metoder för cyberspionage",
                            SegmentId = 8
                        },
                        new
                        {
                            Id = 38,
                            Name = "Säkerhetsskyddslagen",
                            SegmentId = 8
                        },
                        new
                        {
                            Id = 39,
                            Name = "Cyberspionagets aktörer",
                            SegmentId = 8
                        },
                        new
                        {
                            Id = 40,
                            Name = "Värvningsförsök",
                            SegmentId = 9
                        },
                        new
                        {
                            Id = 41,
                            Name = "Affärsspionage",
                            SegmentId = 9
                        },
                        new
                        {
                            Id = 42,
                            Name = "Påverkanskampanjer",
                            SegmentId = 9
                        },
                        new
                        {
                            Id = 43,
                            Name = "Svensk underrättelsetjänst och cyberförsvar",
                            SegmentId = 10
                        },
                        new
                        {
                            Id = 44,
                            Name = "Signalspaning, informationssäkerhet och 5G",
                            SegmentId = 10
                        },
                        new
                        {
                            Id = 45,
                            Name = "Samverkan mot cyberspionage",
                            SegmentId = 10
                        });
                });

            modelBuilder.Entity("ValhallaVaultCyberAwareness.DAL.DbModels.UserResponseModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.HasIndex("UserId");

                    b.ToTable("UserResponses");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ValhallaVaultCyberAwareness.DAL.DbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ValhallaVaultCyberAwareness.DAL.DbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ValhallaVaultCyberAwareness.DAL.DbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ValhallaVaultCyberAwareness.DAL.DbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ValhallaVaultCyberAwareness.DAL.DbModels.AnswerModel", b =>
                {
                    b.HasOne("ValhallaVaultCyberAwareness.DAL.DbModels.QuestionModel", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("ValhallaVaultCyberAwareness.DAL.DbModels.QuestionModel", b =>
                {
                    b.HasOne("ValhallaVaultCyberAwareness.DAL.DbModels.SubcategoryModel", "Subcategory")
                        .WithMany("Questions")
                        .HasForeignKey("SubcategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subcategory");
                });

            modelBuilder.Entity("ValhallaVaultCyberAwareness.DAL.DbModels.SegmentModel", b =>
                {
                    b.HasOne("ValhallaVaultCyberAwareness.DAL.DbModels.CategoryModel", "Category")
                        .WithMany("Segments")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ValhallaVaultCyberAwareness.DAL.DbModels.SubcategoryModel", b =>
                {
                    b.HasOne("ValhallaVaultCyberAwareness.DAL.DbModels.SegmentModel", "Segment")
                        .WithMany("Subcategorys")
                        .HasForeignKey("SegmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Segment");
                });

            modelBuilder.Entity("ValhallaVaultCyberAwareness.DAL.DbModels.UserResponseModel", b =>
                {
                    b.HasOne("ValhallaVaultCyberAwareness.DAL.DbModels.QuestionModel", "Question")
                        .WithMany("UserResponse")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ValhallaVaultCyberAwareness.DAL.DbModels.ApplicationUser", "User")
                        .WithMany("Responses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ValhallaVaultCyberAwareness.DAL.DbModels.ApplicationUser", b =>
                {
                    b.Navigation("Responses");
                });

            modelBuilder.Entity("ValhallaVaultCyberAwareness.DAL.DbModels.CategoryModel", b =>
                {
                    b.Navigation("Segments");
                });

            modelBuilder.Entity("ValhallaVaultCyberAwareness.DAL.DbModels.QuestionModel", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("UserResponse");
                });

            modelBuilder.Entity("ValhallaVaultCyberAwareness.DAL.DbModels.SegmentModel", b =>
                {
                    b.Navigation("Subcategorys");
                });

            modelBuilder.Entity("ValhallaVaultCyberAwareness.DAL.DbModels.SubcategoryModel", b =>
                {
                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
