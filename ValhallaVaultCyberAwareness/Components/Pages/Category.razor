@page "/category/{Id:int}"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Mvc
@using ValhallaVaultCyberAwareness.App.Services
@using ValhallaVaultCyberAwareness.DAL.DbModels
@using ValhallaVaultCyberAwareness.API
@using ValhallaVaultCyberAwareness.DAL.Repository
@using ValhallaVaultCyberAwareness.DAL.Uow
@using ValhallaVaultCyberAwareness.DAL.ViewModel

@* @attribute [Authorize]
 *@
@inject IViewModelService service

@if(category == null)
{
<h2>Error.. Page not found</h2>
}


<div class="col categories mar">
    
    @if (category != null)
    {
        <div class="row ">
            <div class="row categories">
                <h1 class="mar ">@category.Name</h1>
                <p>@category.Info</p>
            </div>
            <hr />

            <div class="row category">


                <div class="cat-row">
                    <div>
                        <h2>@category.Name</h2>
                    </div>

                    @foreach (SegmentViewModel seg in segments)
                    {
                        <div class="cat-row cat-card">
                            <div style="margin:20px;">
                                <img class="img-check mar" src="/Images/check.png" />
                                <span style="font-size:x-large">@seg.Name</span>

                                <div class="cat-row">
                                    <div class="d-flex flex-column ">
                                        @foreach (SubcategoryViewModel sub in subcategories.Where(su => su.SegmentId == seg.Id))
                                        {
                                            <div class="">@sub.Name</div>
                                        }
                                    </div>
                                </div>
                            </div>




                        </div>

                        <br />
                        <br />

                        <br />


                    }


                </div>

            </div>
        </div>
        
        
        

    }
</div>


<!-- Infomation about a specific Category -->

<!-- View of the segments in the category -->

<!-- View of the subcategorys in the segment -->

<!-- Show which segments are finished -->


@code {
    [Parameter]
    public int Id { get; set; }


    CategoryViewModel category { get; set; }
    List<SegmentViewModel> segments { get; set; }
    List<SubcategoryViewModel> subcategories { get; set; }



    protected override async Task OnInitializedAsync()
    {
        //Users = await userCont.GetAllUsersAsync();

        List<CategoryViewModel> categories = await service.GetAllCategoriesAndMeta();
        if (categories.Any())
        {
            category = (CategoryViewModel)categories.FirstOrDefault(c => c.Id == Id);
            segments = category.Segments.Where(s => s.CategoryId == category.Id).ToList();
            subcategories = category.Segments.SelectMany(s => s.Subcategories).ToList();
        }
        


    }

}
